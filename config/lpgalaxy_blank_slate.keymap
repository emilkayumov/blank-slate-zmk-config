/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_BASE 1

// #define TBLE_ORTHO   1
#define TBLE_MIT     1
// #define TBLE_DUAL_2U 1

#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,physical-layout =
#ifdef TBLE_DUAL_2U
                       &layout_ortho_4x12_2x2u;
#elif defined(TBLE_MIT)
                       &layout_ortho_4x12_1x2u;
#else
                       &layout_ortho_4x12_all1u;
#endif
    };

    macros {
      ZMK_MACRO(thumbs_up,
		wait-ms = <1>;
		tap-ms = <5>;
                bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
		)
    };
    
    tap_dances {
    	shifty: shift_caps_word {
		compatible = "zmk,behavior-tap-dance";
		label = "TD_SHIFTY";
		#binding-cells = <0>;
		tapping-term-ms = <150>;
		bindings = <&kp LSHFT>, <&caps_word>;
	};
    };

// Conditional layer only when we have less thumb keys
#ifdef TBLE_DUAL_2U
    cond_layers {
        compatible = "zmk,conditional-layers";
	tri {
	    if-layers = <NUM_L NAV_L>;
	    then-layer = <SYM_L>;
        };
    };
#endif

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
  &kp TAB           &kp Q       &kp W      &kp E       &kp R          &kp T          &kp Y            &kp U          &kp I       &kp O      &kp P         &kp BKSP
  &mt LCTRL ESC     &kp A       &kp S      &kp D       &kp F          &kp G          &kp H            &kp J          &kp K       &kp L      &kp SEMI      &kp RET
  &kp LSHFT         &kp Z       &kp X      &kp C       &kp V          &kp B          &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH      &kp RSHFT
  &kp LCTRL         &mo SYM_L   &kp LALT   &kp LGUI    &mo NUM_L          &kp SPACE                   &mo NAV_L      &kp RGUI    &kp GRAVE  &kp BSLH      &kp QUOT

            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
  &none             &kp EXCL    &kp AT     &kp HASH    &kp DLLR       &kp PRCNT       &kp CARET       &kp AMPS       &kp STAR    &kp LPAR   &kp RPAR       &kp MINUS
  &none             &none       &kp LBRC   &kp LBKT    &kp LPAR       &none           &none           &kp RPAR       &kp RBKT    &kp RBRC   &none          &none
  &none             &none       &none      &none       &none          &none           &none           &none          &none       &none      &none          &none
  &none             &none       &none      &none       &none                &none                     &none          &none       &none      &none          &none
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
  &none             &none       &none       &none       &none          &none          &none    &kp N7     &kp N8      &kp N9       &kp EQUAL     &kp BKSP
  &none             &none       &none       &none       &none          &none          &none    &kp N4     &kp N5      &kp N6       &kp MINUS     &none
  &none             &none       &none       &none       &none          &none          &none    &kp N1     &kp N2      &kp N3       &none         &none
  &none             &none       &none       &none       &none               &none              &kp N0     &none       &none        &none         &none
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
  &bt BT_CLR       &kp C_BRI_DN &kp C_BRI_UP  &none       &none          &none          &none    &none     &kp K_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP     &none
  &none            &none        &none         &none       &none          &none          &none    &none     &none       &none                 &none               &none
  &none            &bt BT(0)    &bt BT(1)     &bt BT(2)   &bt BT(3)      &bt BT(4)      &none    &none     &none       &none                 &none               &none
  &none            &none        &none         &none       &none               &none              &none     &none       &none                 &none               &none
            >;
        };


    };
};

